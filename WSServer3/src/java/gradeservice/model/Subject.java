package gradeservice.model;
// Generated May 11, 2016 1:03:45 PM by Hibernate Tools 4.3.1

import gradeservice.model.helper.WSIntegerAdapter;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * Subject generated by hbm2java
 */
@Entity
@Table(name = "Subject", schema = "dbo", catalog = "WSAppDB2"
)
@XmlAccessorType(XmlAccessType.FIELD)
public class Subject implements java.io.Serializable {


    @XmlJavaTypeAdapter(type = int.class, value = WSIntegerAdapter.class)
    private int id;
    private String name;
    @XmlTransient
    private Set<Mark> marks = new HashSet<Mark>(0);
    @XmlTransient
    private Set<SubjectGroup> subjectGroups = new HashSet<SubjectGroup>(0);

    public Subject() {
    }

    public Subject(int id) {
        this.id = id;
    }

    public Subject(int id, String name) {//, Set<Mark> marks, Set<SubjectGroup> subjectGroups) {
        this.id = id;
        this.name = name;
//        this.marks = marks;
//        this.subjectGroups = subjectGroups;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "name", length = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "subject")
    public Set<Mark> getMarks() {
        return this.marks;
    }

    public void setMarks(Set<Mark> marks) {
        this.marks = marks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "subject")
    public Set<SubjectGroup> getSubjectGroups() {
        return this.subjectGroups;
    }

    public void setSubjectGroups(Set<SubjectGroup> subjectGroups) {
        this.subjectGroups = subjectGroups;
    }

}
